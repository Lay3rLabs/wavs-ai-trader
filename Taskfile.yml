version: "3"

dotenv: [".env"]

includes:
  contracts: ./taskfile/contracts.yml
  components: ./taskfile/components.yml
  backend: ./taskfile/backend.yml
  deploy: ./taskfile/deploy.yml
  test: ./taskfile/test.yml

tasks:
  default:
    cmds:
      - task --list-all

  setup:
    cmds:
      - git pull
      - git checkout remote
      - git pull
      - |
        sudo apt update
        sudo apt install build-essential
      - |
        sudo apt-get install ca-certificates curl
        sudo install -m 0755 -d /etc/apt/keyrings
        sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
        sudo chmod a+r /etc/apt/keyrings/docker.asc

        # Add the repository to Apt sources:
        echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
          $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
          sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
      - sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
      - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
      - rustup target add wasm32-wasip2
      - cargo install wkg
      - task components:fetch-wit-all
      - task components:build-all

  lint:
    desc: "Run code formatting and linting checks"
    cmds:
      - cargo fmt --all -- --check
      - cargo fix --allow-dirty --allow-staged
      - cargo clippy --all-targets -- -D warnings

  clean:
    desc: "Clean all artifacts"
    cmds:
      - rm -rf "{{.ARTIFCACTS_PATH}}"
